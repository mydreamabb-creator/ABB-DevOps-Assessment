apiVersion: v1
kind: Namespace
metadata:
  name: sample-app

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sampleapp-deployment
  namespace: sample-app
  labels:
    app: sampleapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sampleapp
  template:
    metadata:
      labels:
        app: sampleapp
    spec:
      # If your image is in a private registry and you created a secret, uncomment the line below:
      # imagePullSecrets:
      # - name: acr-pull-secret
      containers:
      - name: sampleapp
        # Use your ACR or Docker repo image: e.g. sampleacr1234.azurecr.io/sampleapp:v1 or dockerhubuser/sampleapp:latest
        image: <IMAGE_REGISTRY>/<IMAGE_NAME>:<TAG>
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 2
          failureThreshold: 3
        # Optional startupProbe (useful for slow-starting apps)
        # startupProbe:
        #   httpGet:
        #     path: /
        #     port: 3000
        #   failureThreshold: 30
        #   periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: sampleapp-service
  namespace: sample-app
spec:
  selector:
    app: sampleapp
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: ClusterIP

# Optional: Ingress for external access (if you have an ingress controller)
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: sampleapp-ingress
#   namespace: sample-app
# spec:
#   rules:
#   - http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: sampleapp-service
#             port:
#               number: 80
